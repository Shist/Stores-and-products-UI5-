<mvc:View
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:f="sap.f"
	xmlns:layout="sap.ui.layout"
	xmlns:core="sap.ui.core"
	core:require="{ formatMessage: 'sap/base/strings/formatMessage' }"
	controllerName="pavel.zhukouski.controller.StoreDetails">

	<f:DynamicPage showFooter="true" class="sapUiNoContentPadding">
		<f:title>
			<f:DynamicPageTitle>
				<f:heading>
					<Title text="{i18n>storeDetails}"/>
				</f:heading>
				<f:breadcrumbs>
					<Breadcrumbs>
						<Link text="{i18n>storesList}" press="onStoresListLinkPress"/>
						<Link text="{i18n>storeDetails}"/>
					</Breadcrumbs>
				</f:breadcrumbs>
			</f:DynamicPageTitle>
		</f:title>
		<f:header>
			<f:DynamicPageHeader>
				<layout:HorizontalLayout allowWrapping="true">
					<layout:VerticalLayout class="sapUiMediumMarginEnd">
						<layout:HorizontalLayout>
							<Label
								design="Bold"
								class="sapUiTinyMarginEnd"
								labelFor="textEmail"
								text="{i18n>emailWithColon}"/>
							<Text
								id="textEmail"
								text="{= ${odataClientMode>Email} ? ${odataClientMode>Email} : ${i18n>notSpecified} }"/>
						</layout:HorizontalLayout>
						<layout:HorizontalLayout>
							<Label
								design="Bold"
								class="sapUiTinyMarginEnd"
								labelFor="textPhoneNumber"
								text="{i18n>phoneNumberWithColon}"/>
							<Text
								id="textPhoneNumber"
								text="{= ${odataClientMode>PhoneNumber} ? ${odataClientMode>PhoneNumber} : ${i18n>notSpecified} }"/>
						</layout:HorizontalLayout>
						<layout:HorizontalLayout>
							<Label
								design="Bold"
								class="sapUiTinyMarginEnd"
								labelFor="textAddress"
								text="{i18n>addressWithColon}"/>
							<Text
								id="textAddress"
								text="{= ${odataClientMode>Address} ? ${odataClientMode>Address} : ${i18n>notSpecified} }"/>
						</layout:HorizontalLayout>
					</layout:VerticalLayout>
					<layout:VerticalLayout>
						<layout:HorizontalLayout>
							<Label
								design="Bold"
								class="sapUiTinyMarginEnd"
								labelFor="textEstablished"
								text="{i18n>establishedDateWithColon}"/>
							<Text
								id="textEstablished"
								text="{= ${odataClientMode>Established} ? ${
										path: 'odataClientMode>Established',
										type: 'sap.ui.model.type.Date',
										formatOptions: {
											pattern: 'MMM d, yyyy'
										}
									} : ${i18n>notSpecified}
								}"/>
						</layout:HorizontalLayout>
						<layout:HorizontalLayout>
							<Label
								design="Bold"
								class="sapUiTinyMarginEnd"
								labelFor="textFloorArea"
								text="{i18n>floorAreaWithColon}"/>
							<Text
								id="textFloorArea"
								text="{= ${odataClientMode>FloorArea} ? ${odataClientMode>FloorArea} : ${i18n>notSpecified} }"/>
						</layout:HorizontalLayout>
					</layout:VerticalLayout>
				</layout:HorizontalLayout>
			</f:DynamicPageHeader>
		</f:header>
		<f:content>
			<IconTabBar
				id="iconTabBar"
				select="onFiltersChanged"
				selectedKey="{appView>/currProductsStatusFilter}"
				expandable="false">
				<items>
					<IconTabFilter
						text="{i18n>all}"
						count="{appView>/productsCounts/all}"
						key="ALL"
						showAll="true"/>
					<IconTabSeparator/>
					<IconTabFilter
						text="{i18n>ok}"
						count="{appView>/productsCounts/ok}"
						key="OK"
						icon="sap-icon://message-success"
						iconColor="Positive"/>
					<IconTabFilter
						text="{i18n>storage}"
						count="{appView>/productsCounts/storage}"
						key="STORAGE"
						icon="sap-icon://message-warning"
						iconColor="Critical"/>
					<IconTabFilter
						text="{i18n>outOfStock}"
						count="{appView>/productsCounts/outOfStock}"
						key="OUT_OF_STOCK"
						icon="sap-icon://notification"
						iconColor="Negative"/>
				</items>
				<content>
					<Table id="productsTable" items="{odataClientMode>rel_Products}" sticky="HeaderToolbar" popinLayout="GridSmall">
						<headerToolbar>
							<Toolbar design="Solid">
								<content>
									<Title text="{i18n>products}" class="sapUiSmallMarginBegin"/>
									<ToolbarSpacer/>
									<SearchField
										id="productsSearch"
										value="{appView>/currProductsSearchFilter}"
										search="onFiltersChanged"
										placeholder="{i18n>searchTip}"
										maxLength="30"
										width="15rem"/>
								</content>
							</Toolbar>
						</headerToolbar>
						<columns>
							<Column>
								<HBox class="hboxAlign">
									<Button
										press="onSortBtnPress('name')"
										type="Transparent"
										icon="{
											path: 'appView>/productsSortStates/name',
											formatter: '.formatter.formatSortBtnIcon'
										}"/>
									<Text text="{i18n>name}"/>
								</HBox>
							</Column>
							<Column hAlign="End" minScreenWidth="480px" demandPopin="true">
								<HBox class="hboxAlign">
									<Button
										press="onSortBtnPress('price')"
										type="Transparent"
										icon="{
											path: 'appView>/productsSortStates/price',
											formatter: '.formatter.formatSortBtnIcon'
										}"/>
									<Text text="{i18n>price}"/>
								</HBox>
							</Column>
							<Column minScreenWidth="580px" demandPopin="true">
								<HBox class="hboxAlign">
									<Button
										press="onSortBtnPress('specs')"
										type="Transparent"
										icon="{
											path: 'appView>/productsSortStates/specs',
											formatter: '.formatter.formatSortBtnIcon'
										}"/>
									<Text text="{i18n>specs}"/>
								</HBox>
							</Column>
							<Column minScreenWidth="680px" demandPopin="true">
								<HBox class="hboxAlign">
									<Button
										press="onSortBtnPress('supplierInfo')"
										type="Transparent"
										icon="{
											path: 'appView>/productsSortStates/supplierInfo',
											formatter: '.formatter.formatSortBtnIcon'
										}"/>
									<Text text="{i18n>supplierInfo}"/>
								</HBox>
							</Column>
							<Column minScreenWidth="780px" demandPopin="true">
								<HBox class="hboxAlign">
									<Button
										press="onSortBtnPress('country')"
										type="Transparent"
										icon="{
											path: 'appView>/productsSortStates/country',
											formatter: '.formatter.formatSortBtnIcon'
										}"/>
									<Text text="{i18n>countryOfOrigin}"/>
								</HBox>
							</Column>
							<Column minScreenWidth="880px" demandPopin="true">
								<HBox class="hboxAlign">
									<Button
										press="onSortBtnPress('prodCompany')"
										type="Transparent"
										icon="{
											path: 'appView>/productsSortStates/prodCompany',
											formatter: '.formatter.formatSortBtnIcon'
										}"/>
									<Text text="{i18n>prodCompany}"/>
								</HBox>
							</Column>
							<Column minScreenWidth="980px" demandPopin="true">
								<HBox class="hboxAlign">
									<Button
										press="onSortBtnPress('rating')"
										type="Transparent"
										icon="{
											path: 'appView>/productsSortStates/rating',
											formatter: '.formatter.formatSortBtnIcon'
										}"/>
									<Text text="{i18n>rating}"/>
								</HBox>
							</Column>
							<Column width="80px"></Column>
						</columns>
						<items>
							<ColumnListItem press="onProductPress" type="Navigation">
								<Text maxLines="2" text="{odataClientMode>Name}"/>
								<Text
									maxLines="1"
									text="{= ${odataClientMode>Price} ? ${
											parts: [
												'i18n>priceValue',
												'odataClientMode>Price'
											],
											formatter: 'formatMessage'
										} : ${i18n>notSpecified}
									}"/>
								<Text maxLines="1" text="{odataClientMode>Specs}"/>
								<Text
									maxLines="1"
									text="{= ${odataClientMode>SupplierInfo} ? ${odataClientMode>SupplierInfo} : ${i18n>notSpecified} }"/>
								<Text
									maxLines="1"
									text="{= ${odataClientMode>MadeIn} ? ${odataClientMode>MadeIn} : ${i18n>notSpecified} }"/>
								<Text
									maxLines="1"
									text="{= ${odataClientMode>ProductionCompanyName}
										? ${odataClientMode>ProductionCompanyName}
										: ${i18n>notSpecified} }"/>
								<RatingIndicator value="{= ${odataClientMode>Rating} ? ${odataClientMode>Rating} : 0 }" editable="false"/>
								<HBox justifyContent="SpaceBetween">
									<Button icon="sap-icon://edit" type="Transparent" press="onEditProductBtnPress"/>
									<Button icon="sap-icon://sys-cancel" type="Transparent" press="onDeleteProductBtnPress"/>
								</HBox>
							</ColumnListItem>
						</items>
					</Table>
				</content>
			</IconTabBar>
		</f:content>
		<f:footer>
			<OverflowToolbar>
				<ToolbarSpacer/>
				<Button
					icon="sap-icon://add"
					type="Ghost"
					text="{i18n>create}"
					press="onCreateProductBtnPress"/>
				<Button icon="sap-icon://delete" type="Reject" text="{i18n>delete}" press="onDeleteStoreBtnPress"/>
			</OverflowToolbar>
		</f:footer>
	</f:DynamicPage>

</mvc:View>